Variables
Primitive and Reference Types
Casting
Numbers, Strings and Arrays
Read Input


Primitive
public class App {
    public static void main(){
        byte age = 30;
        long viewsCount = 3_123_456_789L;
        float price = 10.99F;
        char letter = 'A';
        boolean iseligible = false; 

          int age = 20;  // Integer
        double pi = 3.1444; // Decimal
        boolean isCoding = true; // boolean
        char grade = 'A'; // Character
        String name = "Obasi"; // String
        System.out.println(pi); 
    }
}


// Reference vs Primitive
import java.util.Date;

public class App {
    public static void main(){
       byte age = 30;
       Date now = new Date();
       System.out.println(now);
    }
}


// Pointers

import java.awt.*;

public class App {
   public static void main(String[] arg){
    Point point1 = new Point(1, 1);
    Point point2 = point1;
    point1.x = 2;
    System.out.println(point2);
   }
}

// escape sequence

public class App{
    public static void main(String[] args){
        // escape sequence \" to escape quote, \\ to add backslash in a string, \n to add a line, \t to add a tab in our string
        // c:\Windows\...
        String message =  "c:\tWindows\\...";
        System.out.println(message);
    }
}

// Strings

public class App{
    public static void main(String[] args){
        String message =  "  Hello World" + "!!   ";
        System.out.println(message.trim());
        System.out.println(message);
    }
}

// conditions

public class App {

    public static void main(String[] args){
        int score = 35;
        if (score >= 90){
            System.out.println('A');
        } else if (score >= 40) {
            System.out.println('B');
        } else {
            System.out.println('C');
        }
    }
}

// control flow

public class App {

    public static void main(){
        for (int i = 1; i <= 5; i++){
            System.out.println("Count: " + i);
        }

        int j = 1;
        while (j <= 5){
            System.out.println("While: " + j);
            j++;
        }
    }
}


// Arrays
import java.util.Arrays;

public class App {

    public static void main(String[] args){
        // int[] numbers = new int[5];
        // numbers[0] = 1;
        // numbers[1] = 2;
        
        // if we know the values
        int [] numbers = {2, 3, 5, 1, 4};
        System.out.println(numbers.length);
        Arrays.sort(numbers);
        System.out.println(Arrays.toString(numbers));
    }
}


// @2D Arrays

import java.util.Arrays;

public class App {

    public static void main(String[] args){
        int[][] numbers = {{1, 2, 3}, {4, 5, 6}};
        System.out.println(Arrays.deepToString(numbers));
    }
}


// constants using final the the data type  !! it must be in full capital letter
final float PI = 3.14F;


// Arithemtic Expressions

public class App {

    public static void main(String[] args){
        // double result = (double)10 / (double)3;
        // int x =1;
        // x /= 2;

        // (), */, +- --> order of operations
        int x = (10 + 3) * 2;
        System.out.println(x);
    }

}

// Casting

public class App {

    public static void main(String[] args){
        // implicit casting (byte > short > int > long > float > double)
        // short x =1;
        // int y = x + 2;
        // System.out.println(y);

        // explicit casting
        // double x = 1.1;
        // double y =(int)x + 2;
        // System.out.println(y);

        // explicit casting
        String x = "1.1";
        double y = Double.parseDouble(x);
        System.out.println(y);
    }

}

// Math class

public class App {

    public static void main(String[] args){
        // int result = (int)Math.floor(1.1F);
        // int result = Math.max(1, 2);
        int result = (int)(Math.random() * 100);
        System.out.println(result);
    }
}

// formatting numbers

import java.text.NumberFormat;

public class App {

    public static void main(String[] args){
        // $1,234,567  10%
    //    NumberFormat currency = NumberFormat.getCurrencyInstance();
    //    String result = currency.format(1234567.891);
    //    System.out.println(result);

        // NumberFormat percent = NumberFormat.getPercentInstance();
        // String result = percent.format(0.1);
        // System.out.println(result);

        // method chaining
        String result = NumberFormat.getPercentInstance().format(0.1);
        System.out.println(result);
    }
}

//  Reading Input

import java.util.Scanner;

public class App {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Name: ");
        String name = scanner.nextLine().trim();
        System.out.println("You are " + name);
    }
}


// My Mortgage Calculator

import java.text.NumberFormat;
import java.util.Scanner;

public class App {

    public static void main(String[] args) {

        // geting input
        Scanner scanner = new Scanner(System.in);
        System.out.print("Principal: ");
        double amount = Double.parseDouble(scanner.next());
        System.out.print("Annual Interest Rate: ");
        double rate = Double.parseDouble(scanner.next());
        System.out.print("Period (Years): ");
        double years = Double.parseDouble(scanner.next());

        // algorithm for calculating mortgage
        double r = rate/1200;
        double n = 12 * years;
        double m = amount * (r * (Math.pow(1+r, n))) / (Math.pow(1+r, n) - 1);
        
        // display result
        String result = NumberFormat.getCurrencyInstance().format(m);
        System.out.println("Mortgage: " +result);
    }
}

// Mortgage calculator new

import java.text.NumberFormat;
import java.util.Scanner;

public class App {

    public static void main(String[] args) {

        final byte MONTHS_IN_YEAR = 12;
        final byte PERCENT = 100;


        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Principal: ");
        int principal = scanner.nextInt();

        System.out.print("Annual Interest Rate: ");
        float annaulInterest = scanner.nextFloat();
        float monthlyInterest = annaulInterest / PERCENT / MONTHS_IN_YEAR;

        System.out.print("Period (Years): ");
        byte years = scanner.nextByte();
        int numberOfPayment = years * MONTHS_IN_YEAR;

        double mortgage =  principal 
        * (monthlyInterest * (Math.pow(1+monthlyInterest, numberOfPayment))) 
        / (Math.pow(1+monthlyInterest, numberOfPayment) - 1);


        String mortgageFormatted = NumberFormat.getCurrencyInstance().format(mortgage);
        System.out.println("Mortgage: " + mortgageFormatted);
    }
}


// Control flow -- Comparison, Logical, conditonal statements, loop

public class App {

    public static void main(String[] args) {

        // comparison
        int x = 1;
        int y = 1;
        System.out.println(x > y);

        // condition
        int temerature = 12;
        boolean isWarm = temerature > 20 && temerature < 30;
        System.out.println(isWarm);

        boolean hasHighIncome = false;
        boolean hasGoodCredit = true;
        boolean hasCriminalRecord = false;
        boolean isEligible = (hasHighIncome || hasGoodCredit) && !hasCriminalRecord;

        System.out.println(isEligible);
        
    }
}


// conditions (curly braces is not compulsory)
import java.util.Scanner;

public class App {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.print("Temperature: ");
            int temp = scanner.nextInt();
            if (temp > 30) {
                System.out.println("It's a hot day\nDrink plenty of water");
            }
            else if (temp > 20)
                System.out.println("It's a nice day");
            else
                System.out.println("It's cold");
        }
    }
}



// simplyfing conditions
public class App {

    public static void main(String[] args) {
        int income = 120_000;
        boolean hasHighIncome = (income > 100_000);
    }
}


// tenary operator
public class App {

    public static void main(String[] args) {
        int income = 120_000;
        String className = income > 100_000 ? "First" : "Economy";
        System.out.println(className);
    }
}

// switch statements

public class App {

    public static void main(String[] args) {
        String role = "admin";
        // we can also use it with integers
        switch (role) {
            case "admin":
                System.out.println("You're an admin");
                break;

            case "moderator":
                System.out.println("You're a moderator");
                break;

           default:
                System.out.println("You're a guest");

        }

        // if (role == "admin")
        //     System.out.println("You're an admin");
        // else if (role == "moderator")
        //     System.out.println("You're a moderator");
        // else
        //     System.out.println("You're a guest");
    }
}


// Fizzbuzz

import java.util.Scanner;

public class App {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // dry - don't repeat yourself
        
        System.out.print("Number: ");
        int number = scanner.nextInt();
        if (number % 5 == 0 && number % 3 == 0)
            System.out.println("FizzBuzz");
        else if (number % 5 == 0)
            System.out.println("Fizz");
        else if (number % 3 == 0)
            System.out.println("Buzz");
        else
            System.out.println(number);
        
    }
}


// for and while loops

import java.util.Scanner;

public class App {

    public static void main(String[] args) {
        // for loops
        // for (int i = 5; i >= 1; i++)
        // System.out.println("Hello World " + i);

        // while loops
        Scanner scanner = new Scanner(System.in);
        String input = "";
        while (!input.equals("quit")){
            System.out.print("Input: ");
            input = scanner.next().toLowerCase();
            System.out.println(input);
        }

        // do while loops
         do {
            System.out.print("Input: ");
            input = scanner.next().toLowerCase();
            System.out.println(input);
        }while (!input.equals("quit"));
    }

       // break and continue
            while (true){
            System.out.print("Input: ");
            input = scanner.next().toLowerCase();
            if (input.equals("pass"))
                continue;  // movs control to the begining of the loop
            if (input.equals("quit"))
                break;  // breaks the loop
            System.out.println(input);
        }
}

public class App {

    public static void main(String[] args) {
        String[] fruits = {"Apple", "Mango", "Orange"};

        // for (int i = 0; i < fruits.length; i++)
        //     System.out.println(fruits[i]);


        for (int i = fruits.length; i > 0; i--)
            System.out.println(fruits[i]);

        for (String fruit : fruits)
            System.out.println(fruit);
    }
}